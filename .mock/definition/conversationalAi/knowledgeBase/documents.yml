imports:
  root: ../../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create_from_url:
      path: /v1/convai/knowledge-base/url
      method: POST
      auth: false
      docs: >-
        Create a knowledge base document generated by scraping the given
        webpage.
      source:
        openapi: openapi.json
      display-name: Create Url Document
      request:
        name: BodyCreateUrlDocumentV1ConvaiKnowledgeBaseUrlPost
        body:
          properties:
            url:
              type: string
              docs: >-
                URL to a page of documentation that the agent will have access
                to in order to interact with users.
            name:
              type: optional<string>
              docs: A custom, human-readable name for the document.
              validation:
                minLength: 1
        content-type: application/json
      response:
        docs: Successful Response
        type: root.AddKnowledgeBaseResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - request:
            url: url
          response:
            body:
              id: id
              name: name
      audiences:
        - convai
    create_from_file:
      path: /v1/convai/knowledge-base/file
      method: POST
      auth: false
      docs: Create a knowledge base document generated form the uploaded file.
      source:
        openapi: openapi.json
      display-name: Create File Document
      request:
        name: Body_Create_file_document_v1_convai_knowledge_base_file_post
        body:
          properties:
            file:
              type: file
              docs: >-
                Documentation that the agent will have access to in order to
                interact with users.
            name:
              type: optional<string>
              docs: A custom, human-readable name for the document.
              validation:
                minLength: 1
        content-type: multipart/form-data
      response:
        docs: Successful Response
        type: root.AddKnowledgeBaseResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - request: {}
          response:
            body:
              id: id
              name: name
      audiences:
        - convai
    create_from_text:
      path: /v1/convai/knowledge-base/text
      method: POST
      auth: false
      docs: Create a knowledge base document containing the provided text.
      source:
        openapi: openapi.json
      display-name: Create Text Document
      request:
        name: BodyCreateTextDocumentV1ConvaiKnowledgeBaseTextPost
        body:
          properties:
            text:
              type: string
              docs: Text content to be added to the knowledge base.
            name:
              type: optional<string>
              docs: A custom, human-readable name for the document.
              validation:
                minLength: 1
        content-type: application/json
      response:
        docs: Successful Response
        type: root.AddKnowledgeBaseResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - request:
            text: text
          response:
            body:
              id: id
              name: name
      audiences:
        - convai
    get:
      path: /v1/convai/knowledge-base/{documentation_id}
      method: GET
      auth: false
      docs: >-
        Get details about a specific documentation making up the agent's
        knowledge base
      source:
        openapi: openapi.json
      path-parameters:
        documentation_id:
          type: string
          docs: >-
            The id of a document from the knowledge base. This is returned on
            document addition.
      display-name: Get Documentation From Knowledge Base
      response:
        docs: Successful Response
        type: DocumentsGetResponse
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            documentation_id: 21m00Tcm4TlvDq8ikWAM
          response:
            body:
              id: id
              name: name
              metadata:
                created_at_unix_secs: 1
                last_updated_at_unix_secs: 1
                size_bytes: 1
              supported_usages:
                - prompt
              access_info:
                is_creator: true
                creator_name: John Doe
                creator_email: john.doe@example.com
                role: admin
              extracted_inner_html: extracted_inner_html
              url: url
              type: url
      audiences:
        - convai
    delete:
      path: /v1/convai/knowledge-base/{documentation_id}
      method: DELETE
      auth: false
      docs: Delete a document from the knowledge base
      source:
        openapi: openapi.json
      path-parameters:
        documentation_id:
          type: string
          docs: >-
            The id of a document from the knowledge base. This is returned on
            document addition.
      display-name: Delete Knowledge Base Document
      request:
        name: DocumentsDeleteRequest
        query-parameters:
          force:
            type: optional<boolean>
            default: false
            docs: >-
              If set to true, the document will be deleted regardless of whether
              it is used by any agents and it will be deleted from the dependent
              agents.
      response:
        docs: Successful Response
        type: unknown
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            documentation_id: 21m00Tcm4TlvDq8ikWAM
          response:
            body:
              key: value
      audiences:
        - convai
    update:
      path: /v1/convai/knowledge-base/{documentation_id}
      method: PATCH
      auth: false
      docs: Update the name of a document
      source:
        openapi: openapi.json
      path-parameters:
        documentation_id:
          type: string
          docs: >-
            The id of a document from the knowledge base. This is returned on
            document addition.
      display-name: Update Document
      request:
        name: BodyUpdateDocumentV1ConvaiKnowledgeBaseDocumentationIdPatch
        body:
          properties:
            name:
              type: string
              docs: A custom, human-readable name for the document.
              validation:
                minLength: 1
        content-type: application/json
      response:
        docs: Successful Response
        type: DocumentsUpdateResponse
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            documentation_id: 21m00Tcm4TlvDq8ikWAM
          request:
            name: name
          response:
            body:
              id: id
              name: name
              metadata:
                created_at_unix_secs: 1
                last_updated_at_unix_secs: 1
                size_bytes: 1
              supported_usages:
                - prompt
              access_info:
                is_creator: true
                creator_name: John Doe
                creator_email: john.doe@example.com
                role: admin
              extracted_inner_html: extracted_inner_html
              url: url
              type: url
      audiences:
        - convai
    get_agents:
      path: /v1/convai/knowledge-base/{documentation_id}/dependent-agents
      method: GET
      auth: false
      docs: Get a list of agents depending on this knowledge base document
      source:
        openapi: openapi.json
      path-parameters:
        documentation_id:
          type: string
          docs: >-
            The id of a document from the knowledge base. This is returned on
            document addition.
      display-name: Get Dependent Agents List
      request:
        name: DocumentsGetAgentsRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Used for fetching next page. Cursor is returned in the response.
          page_size:
            type: optional<integer>
            default: 30
            docs: >-
              How many documents to return at maximum. Can not exceed 100,
              defaults to 30.
            validation:
              min: 1
              max: 100
      response:
        docs: Successful Response
        type: root.GetKnowledgeBaseDependentAgentsResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            documentation_id: 21m00Tcm4TlvDq8ikWAM
          response:
            body:
              agents:
                - id: id
                  name: name
                  created_at_unix_secs: 1
                  access_level: admin
                  type: available
              next_cursor: next_cursor
              has_more: true
      audiences:
        - convai
    get_content:
      path: /v1/convai/knowledge-base/{documentation_id}/content
      method: GET
      auth: false
      docs: Get the entire content of a document from the knowledge base
      source:
        openapi: openapi.json
      path-parameters:
        documentation_id:
          type: string
          docs: >-
            The id of a document from the knowledge base. This is returned on
            document addition.
      display-name: Get Document Content
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            documentation_id: 21m00Tcm4TlvDq8ikWAM
      audiences:
        - convai
  source:
    openapi: openapi.json
types:
  DocumentsGetResponse:
    discriminant: type
    base-properties: {}
    union:
      url:
        type: root.GetKnowledgeBaseUrlResponseModel
      file:
        type: root.GetKnowledgeBaseFileResponseModel
      text:
        type: root.GetKnowledgeBaseTextResponseModel
    source:
      openapi: openapi.json
  DocumentsUpdateResponse:
    discriminant: type
    base-properties: {}
    union:
      url:
        type: root.GetKnowledgeBaseUrlResponseModel
      file:
        type: root.GetKnowledgeBaseFileResponseModel
      text:
        type: root.GetKnowledgeBaseTextResponseModel
    source:
      openapi: openapi.json
