imports:
  root: ../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /v1/convai/agents/create
      method: POST
      auth: false
      docs: Create an agent from a config object
      source:
        openapi: openapi.json
      display-name: Create agent
      request:
        name: BodyCreateAgentV1ConvaiAgentsCreatePost
        body:
          properties:
            conversation_config:
              type: root.ConversationalConfig
              docs: Conversation configuration for an agent
            platform_settings:
              type: optional<root.AgentPlatformSettingsRequestModel>
              docs: >-
                Platform settings for the agent are all settings that aren't
                related to the conversation orchestration and content.
            name:
              type: optional<string>
              docs: A name to make the agent easier to find
            tags:
              type: optional<list<string>>
              docs: Tags to help classify and filter the agent
        content-type: application/json
      response:
        docs: Successful Response
        type: root.CreateAgentResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - request:
            conversation_config: {}
          response:
            body:
              agent_id: J3Pbu5gP6NNKBscdCdwB
      audiences:
        - convai
    get:
      path: /v1/convai/agents/{agent_id}
      method: GET
      auth: false
      docs: Retrieve config for an agent
      source:
        openapi: openapi.json
      path-parameters:
        agent_id:
          type: string
          docs: The id of an agent. This is returned on agent creation.
      display-name: Get agent
      response:
        docs: Successful Response
        type: root.GetAgentResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            agent_id: 21m00Tcm4TlvDq8ikWAM
          response:
            body:
              agent_id: J3Pbu5gP6NNKBscdCdwB
              name: My Agent
              conversation_config:
                asr:
                  quality: high
                  provider: elevenlabs
                  user_input_audio_format: pcm_16000
                  keywords:
                    - hello
                    - world
                turn:
                  turn_timeout: 7
                  silence_end_call_timeout: -1
                  mode: turn
                tts:
                  model_id: eleven_turbo_v2
                  voice_id: cjVigY5qzO86Huf0OWal
                  supported_voices:
                    - label: label
                      voice_id: voice_id
                  agent_output_audio_format: pcm_16000
                  optimize_streaming_latency: 3
                  stability: 0.5
                  speed: 1
                  similarity_boost: 0.8
                  pronunciation_dictionary_locators:
                    - pronunciation_dictionary_id: pronunciation_dictionary_id
                conversation:
                  text_only: true
                  max_duration_seconds: 600
                  client_events:
                    - audio
                    - interruption
                language_presets:
                  key:
                    overrides:
                      tts:
                        voice_id: cjVigY5qzO86Huf0OWal
                      agent:
                        first_message: Hello, how can I help you today?
                        language: en
                        prompt:
                          prompt: >-
                            You are a helpful assistant that can answer
                            questions about the topic of the conversation.
                agent:
                  first_message: Hello, how can I help you today?
                  language: en
                  dynamic_variables:
                    dynamic_variable_placeholders:
                      user_name: John Doe
                  prompt:
                    prompt: >-
                      You are a helpful assistant that can answer questions
                      about the topic of the conversation.
                    llm: gemini-2.0-flash-001
                    temperature: 0
                    max_tokens: -1
                    tools:
                      - name: name
                        description: description
                        expects_response: false
                        dynamic_variables:
                          dynamic_variable_placeholders:
                            user_name: John Doe
                        type: client
                    tool_ids:
                      - tool_ids
                    knowledge_base:
                      - type: file
                        name: My Knowledge Base
                        id: '123'
                        usage_mode: auto
              metadata:
                created_at_unix_secs: 1
              platform_settings:
                auth:
                  enable_auth: true
                  allowlist:
                    - hostname: https://example.com
                  shareable_token: '1234567890'
                evaluation:
                  criteria:
                    - id: '1234567890'
                      name: name
                      conversation_goal_prompt: >-
                        You are a helpful assistant that can answer questions
                        about the topic of the conversation.
                      use_knowledge_base: false
                widget:
                  variant: tiny
                  placement: top-left
                  expandable: never
                  avatar:
                    color_1: '#2792dc'
                    color_2: '#9ce6e6'
                    type: orb
                  feedback_mode: none
                  bg_color: bg_color
                  text_color: text_color
                  btn_color: btn_color
                  btn_text_color: btn_text_color
                  border_color: border_color
                  focus_color: focus_color
                  border_radius: 1
                  btn_radius: 1
                  action_text: action_text
                  start_call_text: start_call_text
                  end_call_text: end_call_text
                  expand_text: expand_text
                  listening_text: listening_text
                  speaking_text: speaking_text
                  shareable_page_text: shareable_page_text
                  shareable_page_show_terms: true
                  terms_text: terms_text
                  terms_html: terms_html
                  terms_key: terms_key
                  show_avatar_when_collapsed: true
                  disable_banner: true
                  override_link: override_link
                  mic_muting_enabled: true
                  transcript_enabled: true
                  text_input_enabled: true
                  language_selector: false
                  supports_text_only: true
                  custom_avatar_path: https://example.com/avatar.png
                  language_presets:
                    key: {}
                data_collection:
                  key:
                    type: boolean
                    description: My property
                    dynamic_variable: Dynamic variable
                    constant_value: Constant value
                overrides:
                  custom_llm_extra_body: true
                  enable_conversation_initiation_client_data_from_webhook: true
                call_limits:
                  agent_concurrency_limit: -1
                  daily_limit: 100000
                privacy:
                  record_voice: true
                  retention_days: -1
                  delete_transcript_and_pii: false
                  delete_audio: false
                  apply_to_existing_conversations: false
                  zero_retention_mode: false
                workspace_overrides:
                  conversation_initiation_client_data_webhook:
                    url: https://example.com/webhook
                    request_headers:
                      Content-Type: application/json
                safety:
                  is_blocked_ivc: true
                  is_blocked_non_ivc: true
                  ignore_safety_evaluation: true
              phone_numbers:
                - phone_number: phone_number
                  label: label
                  phone_number_id: X3Pbu5gP6NNKBscdCdwB
                  assigned_agent:
                    agent_id: F3Pbu5gP6NNKBscdCdwB
                    agent_name: My Agent
                  provider_config:
                    address: address
                    transport: auto
                    media_encryption: disabled
                    has_auth_credentials: true
                  provider: sip_trunk
              access_info:
                is_creator: true
                creator_name: John Doe
                creator_email: john.doe@example.com
                role: admin
              tags:
                - tags
      audiences:
        - convai
    delete:
      path: /v1/convai/agents/{agent_id}
      method: DELETE
      auth: false
      docs: Delete an agent
      source:
        openapi: openapi.json
      path-parameters:
        agent_id:
          type: string
          docs: The id of an agent. This is returned on agent creation.
      display-name: Delete agent
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            agent_id: 21m00Tcm4TlvDq8ikWAM
      audiences:
        - convai
    update:
      path: /v1/convai/agents/{agent_id}
      method: PATCH
      auth: false
      docs: Patches an Agent settings
      source:
        openapi: openapi.json
      path-parameters:
        agent_id:
          type: string
          docs: The id of an agent. This is returned on agent creation.
      display-name: Update agent
      request:
        name: UpdateAgentRequest
        body:
          properties:
            conversation_config:
              type: optional<root.ConversationalConfig>
              docs: Conversation configuration for an agent
            platform_settings:
              type: optional<root.AgentPlatformSettingsRequestModel>
              docs: >-
                Platform settings for the agent are all settings that aren't
                related to the conversation orchestration and content.
            name:
              type: optional<string>
              docs: A name to make the agent easier to find
            tags:
              type: optional<list<string>>
              docs: Tags to help classify and filter the agent
        content-type: application/json
      response:
        docs: Successful Response
        type: root.GetAgentResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            agent_id: 21m00Tcm4TlvDq8ikWAM
          request: {}
          response:
            body:
              agent_id: J3Pbu5gP6NNKBscdCdwB
              name: My Agent
              conversation_config:
                asr:
                  quality: high
                  provider: elevenlabs
                  user_input_audio_format: pcm_16000
                  keywords:
                    - hello
                    - world
                turn:
                  turn_timeout: 7
                  silence_end_call_timeout: -1
                  mode: turn
                tts:
                  model_id: eleven_turbo_v2
                  voice_id: cjVigY5qzO86Huf0OWal
                  supported_voices:
                    - label: label
                      voice_id: voice_id
                  agent_output_audio_format: pcm_16000
                  optimize_streaming_latency: 3
                  stability: 0.5
                  speed: 1
                  similarity_boost: 0.8
                  pronunciation_dictionary_locators:
                    - pronunciation_dictionary_id: pronunciation_dictionary_id
                conversation:
                  text_only: true
                  max_duration_seconds: 600
                  client_events:
                    - audio
                    - interruption
                language_presets:
                  key:
                    overrides:
                      tts:
                        voice_id: cjVigY5qzO86Huf0OWal
                      agent:
                        first_message: Hello, how can I help you today?
                        language: en
                        prompt:
                          prompt: >-
                            You are a helpful assistant that can answer
                            questions about the topic of the conversation.
                agent:
                  first_message: Hello, how can I help you today?
                  language: en
                  dynamic_variables:
                    dynamic_variable_placeholders:
                      user_name: John Doe
                  prompt:
                    prompt: >-
                      You are a helpful assistant that can answer questions
                      about the topic of the conversation.
                    llm: gemini-2.0-flash-001
                    temperature: 0
                    max_tokens: -1
                    tools:
                      - name: name
                        description: description
                        expects_response: false
                        dynamic_variables:
                          dynamic_variable_placeholders:
                            user_name: John Doe
                        type: client
                    tool_ids:
                      - tool_ids
                    knowledge_base:
                      - type: file
                        name: My Knowledge Base
                        id: '123'
                        usage_mode: auto
              metadata:
                created_at_unix_secs: 1
              platform_settings:
                auth:
                  enable_auth: true
                  allowlist:
                    - hostname: https://example.com
                  shareable_token: '1234567890'
                evaluation:
                  criteria:
                    - id: '1234567890'
                      name: name
                      conversation_goal_prompt: >-
                        You are a helpful assistant that can answer questions
                        about the topic of the conversation.
                      use_knowledge_base: false
                widget:
                  variant: tiny
                  placement: top-left
                  expandable: never
                  avatar:
                    color_1: '#2792dc'
                    color_2: '#9ce6e6'
                    type: orb
                  feedback_mode: none
                  bg_color: bg_color
                  text_color: text_color
                  btn_color: btn_color
                  btn_text_color: btn_text_color
                  border_color: border_color
                  focus_color: focus_color
                  border_radius: 1
                  btn_radius: 1
                  action_text: action_text
                  start_call_text: start_call_text
                  end_call_text: end_call_text
                  expand_text: expand_text
                  listening_text: listening_text
                  speaking_text: speaking_text
                  shareable_page_text: shareable_page_text
                  shareable_page_show_terms: true
                  terms_text: terms_text
                  terms_html: terms_html
                  terms_key: terms_key
                  show_avatar_when_collapsed: true
                  disable_banner: true
                  override_link: override_link
                  mic_muting_enabled: true
                  transcript_enabled: true
                  text_input_enabled: true
                  language_selector: false
                  supports_text_only: true
                  custom_avatar_path: https://example.com/avatar.png
                  language_presets:
                    key: {}
                data_collection:
                  key:
                    type: boolean
                    description: My property
                    dynamic_variable: Dynamic variable
                    constant_value: Constant value
                overrides:
                  custom_llm_extra_body: true
                  enable_conversation_initiation_client_data_from_webhook: true
                call_limits:
                  agent_concurrency_limit: -1
                  daily_limit: 100000
                privacy:
                  record_voice: true
                  retention_days: -1
                  delete_transcript_and_pii: false
                  delete_audio: false
                  apply_to_existing_conversations: false
                  zero_retention_mode: false
                workspace_overrides:
                  conversation_initiation_client_data_webhook:
                    url: https://example.com/webhook
                    request_headers:
                      Content-Type: application/json
                safety:
                  is_blocked_ivc: true
                  is_blocked_non_ivc: true
                  ignore_safety_evaluation: true
              phone_numbers:
                - phone_number: phone_number
                  label: label
                  phone_number_id: X3Pbu5gP6NNKBscdCdwB
                  assigned_agent:
                    agent_id: F3Pbu5gP6NNKBscdCdwB
                    agent_name: My Agent
                  provider_config:
                    address: address
                    transport: auto
                    media_encryption: disabled
                    has_auth_credentials: true
                  provider: sip_trunk
              access_info:
                is_creator: true
                creator_name: John Doe
                creator_email: john.doe@example.com
                role: admin
              tags:
                - tags
      audiences:
        - convai
    list:
      path: /v1/convai/agents
      method: GET
      auth: false
      docs: Returns a list of your agents and their metadata.
      source:
        openapi: openapi.json
      display-name: List Agents
      request:
        name: AgentsListRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: Used for fetching next page. Cursor is returned in the response.
          page_size:
            type: optional<integer>
            default: 30
            docs: >-
              How many Agents to return at maximum. Can not exceed 100, defaults
              to 30.
            validation:
              min: 1
              max: 100
          search:
            type: optional<string>
            docs: Search by agents name.
      response:
        docs: Successful Response
        type: root.GetAgentsPageResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - response:
            body:
              agents:
                - agent_id: J3Pbu5gP6NNKBscdCdwB
                  name: My Agent
                  tags:
                    - Customer Support
                    - Technical Help
                    - Eleven
                  created_at_unix_secs: 1716153600
                  access_info:
                    is_creator: true
                    creator_name: John Doe
                    creator_email: john.doe@example.com
                    role: admin
              next_cursor: '123'
              has_more: false
      audiences:
        - convai
    simulate_conversation:
      path: /v1/convai/agents/{agent_id}/simulate-conversation
      method: POST
      auth: false
      docs: Run a conversation between the agent and a simulated user.
      source:
        openapi: openapi.json
      path-parameters:
        agent_id:
          type: string
          docs: The id of an agent. This is returned on agent creation.
      display-name: Simulates A Conversation
      request:
        name: >-
          BodySimulatesAConversationV1ConvaiAgentsAgentIdSimulateConversationPost
        body:
          properties:
            simulation_specification:
              type: root.ConversationSimulationSpecification
              docs: >-
                A specification detailing how the conversation should be
                simulated
            extra_evaluation_criteria:
              type: optional<list<root.PromptEvaluationCriteria>>
              docs: A list of evaluation criteria to test
        content-type: application/json
      response:
        docs: Successful Response
        type: root.AgentSimulatedChatTestResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            agent_id: 21m00Tcm4TlvDq8ikWAM
          request:
            simulation_specification:
              simulated_user_config:
                first_message: Hello, how can I help you today?
                language: en
          response:
            body:
              simulated_conversation:
                - role: user
                  message: message
                  tool_calls:
                    - request_id: request_id
                      tool_name: tool_name
                      params_as_json: params_as_json
                      tool_has_been_called: true
                  tool_results:
                    - request_id: request_id
                      tool_name: tool_name
                      result_value: result_value
                      is_error: true
                      tool_has_been_called: true
                  feedback:
                    score: like
                    time_in_call_secs: 1
                  llm_override: llm_override
                  time_in_call_secs: 1
                  rag_retrieval_info:
                    chunks:
                      - document_id: document_id
                        chunk_id: chunk_id
                        vector_distance: 1.1
                    embedding_model: e5_mistral_7b_instruct
                    retrieval_query: retrieval_query
                    rag_latency_secs: 1.1
                  interrupted: true
                  original_message: original_message
                  source_medium: audio
              analysis:
                evaluation_criteria_results:
                  key:
                    criteria_id: criteria_id
                    result: success
                    rationale: rationale
                data_collection_results:
                  key:
                    data_collection_id: data_collection_id
                    rationale: rationale
                call_successful: success
                transcript_summary: transcript_summary
      audiences:
        - convai
    simulate_conversation_stream:
      path: /v1/convai/agents/{agent_id}/simulate-conversation/stream
      method: POST
      auth: false
      docs: >-
        Run a conversation between the agent and a simulated user and stream
        back the response. Response is streamed back as partial lists of
        messages that should be concatenated and once the conversation has
        complete a single final message with the conversation analysis will be
        sent.
      source:
        openapi: openapi.json
      path-parameters:
        agent_id:
          type: string
          docs: The id of an agent. This is returned on agent creation.
      display-name: Simulates A Conversation (Stream)
      request:
        name: >-
          BodySimulatesAConversationStreamV1ConvaiAgentsAgentIdSimulateConversationStreamPost
        body:
          properties:
            simulation_specification:
              type: root.ConversationSimulationSpecification
              docs: >-
                A specification detailing how the conversation should be
                simulated
            extra_evaluation_criteria:
              type: optional<list<root.PromptEvaluationCriteria>>
              docs: A list of evaluation criteria to test
        content-type: application/json
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            agent_id: 21m00Tcm4TlvDq8ikWAM
          request:
            simulation_specification:
              simulated_user_config:
                first_message: Hello, how can I help you today?
                language: en
      audiences:
        - convai
  source:
    openapi: openapi.json
